The test for function print_sorted() in 1-my_list.py
==========================================

This file is for test function print_sorted
==========================================

Using 'print_sorted'

Import the function
    >>> MyList = __import__('1-my_list').MyList

==========================================

#Case1
>>> other_list = MyList()
>>> other_list.append(3)
>>> other_list.append(4)
>>> other_list.append(5)
>>> other_list.append(6)
>>> other_list.append(7)
>>> other_list.append(18)
>>> print(other_list)
[3, 4, 5, 6, 7, 18]
>>> other_list.print_sorted()
[3, 4, 5, 6, 7, 18]
>>> print(other_list)
[3, 4, 5, 6, 7, 18]

#Case2
>>> proof = MyList()
>>> proof.append(3)
>>> proof.append(24)
>>> proof.append(89)
>>> proof.append(6)
>>> print(proof)
[3, 24, 89, 6]
>>> proof.print_sorted()
[3, 6, 24, 89]
>>> print(proof)
[3, 24, 89, 6]

#case3
>>> other_list.append(-6)
>>> other_list.append(11)
>>> print(other_list)
[3, 4, 5, 6, 7, 18, -6, 11]
>>> other_list.print_sorted()
[-6, 3, 4, 5, 6, 7, 11, 18]
>>> print(other_list)
[3, 4, 5, 6, 7, 18, -6, 11]

#case4
>>> l = MyList()
>>> l.append(-7)
>>> l.append(-26)
>>> l.append(-23)
>>> l.append(-4)
>>> l.append(-30)
>>> print(l)
[-7, -26, -23, -4, -30]
>>> l.print_sorted()
[-30, -26, -23, -7, -4]
>>> print(l)
[-7, -26, -23, -4, -30]

#case5
>>> l = MyList(2)
Traceback (most recent call last):
TypeError: 'int' object is not iterable

#case6
>>> issubclass(MyList, list)
True

#case7
>>> issubclass(list, MyList)
False

#case8
>>> l = MyList()
>>> l.print_sorted()
[]

============================================